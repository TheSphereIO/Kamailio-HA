#!/usr/bin/env ansible-playbook

#Very Important:: Be sure that host name of your nodes are not equal!

- name: Install and configure Corosync, Pacemaker and Crmsh
  hosts: kamailio
  sudo: False
  vars:
    preferencesPath: /etc/apt/preferences.d/
    mtCastAddr: "239.0.0.95"
    kamailioVirtualIP: "192.168.120.90"
    kamailioVirtualIPNetMask: "255.255.255.0"
    kamailioVirtualIPBroadCast: "192.168.120.255"
  tasks:
    - name: To use this ppa with https, first install the https transport module for apt (Pacemaker is in these repositores) refer to 'https://wiki.debian.org/Debian-HA/ClustersFromScratch'
      apt: pkg=apt-transport-https update_cache=yes
      
    - name: save the MMOD List (http) or MMOD List (https) to /etc/apt/sources.list.d/ 
      get_url: url=https://ppa.mmogp.com/apt/debian/transport/https/mmod.list dest=/etc/apt/sources.list.d/mmod.list force=yes
    
    - name: Finally, add the MMOD GnuPG Key to your system and update apt
      apt_key: url=https://ppa.mmogp.com/apt/debian/mmod.gpg.key
    
    - name: Adding repository
      apt_repository: repo='deb http://ftp.de.debian.org/debian testing main' state=present update_cache=yes
      
    - name: And we should add also a preferences file, so in this way we won't mess with the system
      copy: src=./files/preferences-mmod dest={{preferencesPath}}/preferences-mmod force=yes
    
    - name: Copying the other preferences file
      copy: src=./files/preferences-testing dest={{preferencesPath}}/preferences-testing force=yes
      
    - name: Now we are reaqdy to install our packages. I used default_release which is equal to -t (refer to installation guide)
      apt: pkg={{item}} update_cache=yes default_release=testing
      with_items:
        - libqb0
        - fence-agents
        
    - name: Finally installing pacemaker and corosync
      apt: pkg={{item}} update_cache=yes
      with_items:
        - pacemaker
        - corosync
    
    #FIXME:: Adding to different runlevels! This currently does not work use another mechanism.
    - name: Adding corosync to different runlevels
      service: name=corosync enabled=yes state=started
      
    - name: Adding pacemaker to different runlevels
      service: name=pacemaker enabled=yes state=started
        
    - name: Copying corosync configuration template to each machine!
      template: src=./templates/corosync.conf dest=/etc/corosync/corosync.conf force=yes
      notify: restart corosync
      
    #Now you can check the output of crm status to see if your nodes are online or not!
    
    - name: Copying virtual interface config file
      template: src=./templates/virtualIface dest=/etc/network/interfaces.d/virtualIface force=yes
    
    - name: Restarting networking service
      service: name=networking state=restarted
    
     
  handlers:
    - name: restart corosync
      service: name=corosync state=restarted
    